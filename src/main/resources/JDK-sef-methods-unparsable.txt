java.lang.Enum.clone()
randoop.main.RandoopUsageError: Could not parse signature java.lang.Enum.clone()
	at randoop.reflection.OperationModel.signatureToOperation(OperationModel.java:668)
	at randoop.resource.MethodListGen.main(MethodListGen.java:105)
Caused by: randoop.reflection.SignatureParseException: Class class java.lang.Enum found, but method clone([]) not found for signature java.lang.Enum.clone()
Here are the declared methods:%n  public final java.lang.String java.lang.Enum.name()
  protected final void java.lang.Enum.finalize()
  public final boolean java.lang.Enum.equals(java.lang.Object)
  public java.lang.String java.lang.Enum.toString()
  public final int java.lang.Enum.hashCode()
  protected final java.lang.Object java.lang.Enum.clone() throws java.lang.CloneNotSupportedException
  public int java.lang.Enum.compareTo(java.lang.Object)
  public final int java.lang.Enum.compareTo(java.lang.Enum)
  public static java.lang.Enum java.lang.Enum.valueOf(java.lang.Class,java.lang.String)
  public final java.lang.Class java.lang.Enum.getDeclaringClass()
  private void java.lang.Enum.readObject(java.io.ObjectInputStream) throws java.io.IOException,java.lang.ClassNotFoundException
  public final int java.lang.Enum.ordinal()
  private void java.lang.Enum.readObjectNoData() throws java.io.ObjectStreamException

	at randoop.reflection.SignatureParser.parse(SignatureParser.java:164)
	at randoop.reflection.OperationModel.signatureToOperation(OperationModel.java:666)
	... 1 more
Caused by: java.lang.NoSuchMethodException: java.lang.Enum.clone()
	at java.lang.Class.getMethod(Class.java:1786)
	at randoop.reflection.SignatureParser.parse(SignatureParser.java:153)
	... 2 more

java.lang.Object.clone()
randoop.main.RandoopUsageError: Could not parse signature java.lang.Object.clone()
	at randoop.reflection.OperationModel.signatureToOperation(OperationModel.java:668)
	at randoop.resource.MethodListGen.main(MethodListGen.java:105)
Caused by: randoop.reflection.SignatureParseException: Class class java.lang.Object found, but method clone([]) not found for signature java.lang.Object.clone()
Here are the declared methods:%n  protected void java.lang.Object.finalize() throws java.lang.Throwable
  public final void java.lang.Object.wait(long,int) throws java.lang.InterruptedException
  public final native void java.lang.Object.wait(long) throws java.lang.InterruptedException
  public final void java.lang.Object.wait() throws java.lang.InterruptedException
  public boolean java.lang.Object.equals(java.lang.Object)
  public java.lang.String java.lang.Object.toString()
  public native int java.lang.Object.hashCode()
  public final native java.lang.Class java.lang.Object.getClass()
  protected native java.lang.Object java.lang.Object.clone() throws java.lang.CloneNotSupportedException
  private static native void java.lang.Object.registerNatives()
  public final native void java.lang.Object.notify()
  public final native void java.lang.Object.notifyAll()

	at randoop.reflection.SignatureParser.parse(SignatureParser.java:164)
	at randoop.reflection.OperationModel.signatureToOperation(OperationModel.java:666)
	... 1 more
Caused by: java.lang.NoSuchMethodException: java.lang.Object.clone()
	at java.lang.Class.getMethod(Class.java:1786)
	at randoop.reflection.SignatureParser.parse(SignatureParser.java:153)
	... 2 more

java.lang.String.indexOf(char[], int, int, char[], int, int, int)
randoop.main.RandoopUsageError: Could not parse signature java.lang.String.indexOf(char[], int, int, char[], int, int, int)
	at randoop.reflection.OperationModel.signatureToOperation(OperationModel.java:668)
	at randoop.resource.MethodListGen.main(MethodListGen.java:105)
Caused by: randoop.reflection.SignatureParseException: Class class java.lang.String found, but method indexOf([class [C, int, int, class [C, int, int, int]) not found for signature java.lang.String.indexOf(char[], int, int, char[], int, int, int)
Here are the declared methods:%n  public boolean java.lang.String.equals(java.lang.Object)
  public java.lang.String java.lang.String.toString()
  public int java.lang.String.hashCode()
  public int java.lang.String.compareTo(java.lang.Object)
  public int java.lang.String.compareTo(java.lang.String)
  public int java.lang.String.indexOf(java.lang.String,int)
  static int java.lang.String.indexOf(char[],int,int,java.lang.String,int)
  static int java.lang.String.indexOf(char[],int,int,char[],int,int,int)
  public int java.lang.String.indexOf(int)
  public int java.lang.String.indexOf(java.lang.String)
  public int java.lang.String.indexOf(int,int)
  public static java.lang.String java.lang.String.valueOf(char)
  public static java.lang.String java.lang.String.valueOf(java.lang.Object)
  public static java.lang.String java.lang.String.valueOf(boolean)
  public static java.lang.String java.lang.String.valueOf(char[],int,int)
  public static java.lang.String java.lang.String.valueOf(char[])
  public static java.lang.String java.lang.String.valueOf(double)
  public static java.lang.String java.lang.String.valueOf(float)
  public static java.lang.String java.lang.String.valueOf(long)
  public static java.lang.String java.lang.String.valueOf(int)
  private static void java.lang.String.checkBounds(byte[],int,int)
  public int java.lang.String.length()
  public boolean java.lang.String.isEmpty()
  public char java.lang.String.charAt(int)
  public int java.lang.String.codePointAt(int)
  public int java.lang.String.codePointBefore(int)
  public int java.lang.String.codePointCount(int,int)
  public int java.lang.String.offsetByCodePoints(int,int)
  public void java.lang.String.getChars(int,int,char[],int)
  void java.lang.String.getChars(char[],int)
  public byte[] java.lang.String.getBytes()
  public byte[] java.lang.String.getBytes(java.lang.String) throws java.io.UnsupportedEncodingException
  public void java.lang.String.getBytes(int,int,byte[],int)
  public byte[] java.lang.String.getBytes(java.nio.charset.Charset)
  public boolean java.lang.String.contentEquals(java.lang.StringBuffer)
  public boolean java.lang.String.contentEquals(java.lang.CharSequence)
  private boolean java.lang.String.nonSyncContentEquals(java.lang.AbstractStringBuilder)
  public boolean java.lang.String.equalsIgnoreCase(java.lang.String)
  public int java.lang.String.compareToIgnoreCase(java.lang.String)
  public boolean java.lang.String.regionMatches(int,java.lang.String,int,int)
  public boolean java.lang.String.regionMatches(boolean,int,java.lang.String,int,int)
  public boolean java.lang.String.startsWith(java.lang.String)
  public boolean java.lang.String.startsWith(java.lang.String,int)
  public boolean java.lang.String.endsWith(java.lang.String)
  private int java.lang.String.indexOfSupplementary(int,int)
  public int java.lang.String.lastIndexOf(int,int)
  static int java.lang.String.lastIndexOf(char[],int,int,char[],int,int,int)
  static int java.lang.String.lastIndexOf(char[],int,int,java.lang.String,int)
  public int java.lang.String.lastIndexOf(java.lang.String,int)
  public int java.lang.String.lastIndexOf(int)
  public int java.lang.String.lastIndexOf(java.lang.String)
  private int java.lang.String.lastIndexOfSupplementary(int,int)
  public java.lang.String java.lang.String.substring(int)
  public java.lang.String java.lang.String.substring(int,int)
  public java.lang.CharSequence java.lang.String.subSequence(int,int)
  public java.lang.String java.lang.String.concat(java.lang.String)
  public java.lang.String java.lang.String.replace(char,char)
  public java.lang.String java.lang.String.replace(java.lang.CharSequence,java.lang.CharSequence)
  public boolean java.lang.String.matches(java.lang.String)
  public boolean java.lang.String.contains(java.lang.CharSequence)
  public java.lang.String java.lang.String.replaceFirst(java.lang.String,java.lang.String)
  public java.lang.String java.lang.String.replaceAll(java.lang.String,java.lang.String)
  public java.lang.String[] java.lang.String.split(java.lang.String,int)
  public java.lang.String[] java.lang.String.split(java.lang.String)
  public static java.lang.String java.lang.String.join(java.lang.CharSequence,java.lang.CharSequence[])
  public static java.lang.String java.lang.String.join(java.lang.CharSequence,java.lang.Iterable)
  public java.lang.String java.lang.String.toLowerCase(java.util.Locale)
  public java.lang.String java.lang.String.toLowerCase()
  public java.lang.String java.lang.String.toUpperCase()
  public java.lang.String java.lang.String.toUpperCase(java.util.Locale)
  public java.lang.String java.lang.String.trim()
  public char[] java.lang.String.toCharArray()
  public static java.lang.String java.lang.String.format(java.util.Locale,java.lang.String,java.lang.Object[])
  public static java.lang.String java.lang.String.format(java.lang.String,java.lang.Object[])
  public static java.lang.String java.lang.String.copyValueOf(char[],int,int)
  public static java.lang.String java.lang.String.copyValueOf(char[])
  public native java.lang.String java.lang.String.intern()

	at randoop.reflection.SignatureParser.parse(SignatureParser.java:164)
	at randoop.reflection.OperationModel.signatureToOperation(OperationModel.java:666)
	... 1 more
Caused by: java.lang.NoSuchMethodException: java.lang.String.indexOf([C, int, int, [C, int, int, int)
	at java.lang.Class.getMethod(Class.java:1786)
	at randoop.reflection.SignatureParser.parse(SignatureParser.java:153)
	... 2 more

java.lang.String.indexOf(char[], int, int, java.lang.String, int)
randoop.main.RandoopUsageError: Could not parse signature java.lang.String.indexOf(char[], int, int, java.lang.String, int)
	at randoop.reflection.OperationModel.signatureToOperation(OperationModel.java:668)
	at randoop.resource.MethodListGen.main(MethodListGen.java:105)
Caused by: randoop.reflection.SignatureParseException: Class class java.lang.String found, but method indexOf([class [C, int, int, class java.lang.String, int]) not found for signature java.lang.String.indexOf(char[], int, int, java.lang.String, int)
Here are the declared methods:%n  public boolean java.lang.String.equals(java.lang.Object)
  public java.lang.String java.lang.String.toString()
  public int java.lang.String.hashCode()
  public int java.lang.String.compareTo(java.lang.Object)
  public int java.lang.String.compareTo(java.lang.String)
  public int java.lang.String.indexOf(java.lang.String,int)
  static int java.lang.String.indexOf(char[],int,int,java.lang.String,int)
  static int java.lang.String.indexOf(char[],int,int,char[],int,int,int)
  public int java.lang.String.indexOf(int)
  public int java.lang.String.indexOf(java.lang.String)
  public int java.lang.String.indexOf(int,int)
  public static java.lang.String java.lang.String.valueOf(char)
  public static java.lang.String java.lang.String.valueOf(java.lang.Object)
  public static java.lang.String java.lang.String.valueOf(boolean)
  public static java.lang.String java.lang.String.valueOf(char[],int,int)
  public static java.lang.String java.lang.String.valueOf(char[])
  public static java.lang.String java.lang.String.valueOf(double)
  public static java.lang.String java.lang.String.valueOf(float)
  public static java.lang.String java.lang.String.valueOf(long)
  public static java.lang.String java.lang.String.valueOf(int)
  private static void java.lang.String.checkBounds(byte[],int,int)
  public int java.lang.String.length()
  public boolean java.lang.String.isEmpty()
  public char java.lang.String.charAt(int)
  public int java.lang.String.codePointAt(int)
  public int java.lang.String.codePointBefore(int)
  public int java.lang.String.codePointCount(int,int)
  public int java.lang.String.offsetByCodePoints(int,int)
  public void java.lang.String.getChars(int,int,char[],int)
  void java.lang.String.getChars(char[],int)
  public byte[] java.lang.String.getBytes()
  public byte[] java.lang.String.getBytes(java.lang.String) throws java.io.UnsupportedEncodingException
  public void java.lang.String.getBytes(int,int,byte[],int)
  public byte[] java.lang.String.getBytes(java.nio.charset.Charset)
  public boolean java.lang.String.contentEquals(java.lang.StringBuffer)
  public boolean java.lang.String.contentEquals(java.lang.CharSequence)
  private boolean java.lang.String.nonSyncContentEquals(java.lang.AbstractStringBuilder)
  public boolean java.lang.String.equalsIgnoreCase(java.lang.String)
  public int java.lang.String.compareToIgnoreCase(java.lang.String)
  public boolean java.lang.String.regionMatches(int,java.lang.String,int,int)
  public boolean java.lang.String.regionMatches(boolean,int,java.lang.String,int,int)
  public boolean java.lang.String.startsWith(java.lang.String)
  public boolean java.lang.String.startsWith(java.lang.String,int)
  public boolean java.lang.String.endsWith(java.lang.String)
  private int java.lang.String.indexOfSupplementary(int,int)
  public int java.lang.String.lastIndexOf(int,int)
  static int java.lang.String.lastIndexOf(char[],int,int,char[],int,int,int)
  static int java.lang.String.lastIndexOf(char[],int,int,java.lang.String,int)
  public int java.lang.String.lastIndexOf(java.lang.String,int)
  public int java.lang.String.lastIndexOf(int)
  public int java.lang.String.lastIndexOf(java.lang.String)
  private int java.lang.String.lastIndexOfSupplementary(int,int)
  public java.lang.String java.lang.String.substring(int)
  public java.lang.String java.lang.String.substring(int,int)
  public java.lang.CharSequence java.lang.String.subSequence(int,int)
  public java.lang.String java.lang.String.concat(java.lang.String)
  public java.lang.String java.lang.String.replace(char,char)
  public java.lang.String java.lang.String.replace(java.lang.CharSequence,java.lang.CharSequence)
  public boolean java.lang.String.matches(java.lang.String)
  public boolean java.lang.String.contains(java.lang.CharSequence)
  public java.lang.String java.lang.String.replaceFirst(java.lang.String,java.lang.String)
  public java.lang.String java.lang.String.replaceAll(java.lang.String,java.lang.String)
  public java.lang.String[] java.lang.String.split(java.lang.String,int)
  public java.lang.String[] java.lang.String.split(java.lang.String)
  public static java.lang.String java.lang.String.join(java.lang.CharSequence,java.lang.CharSequence[])
  public static java.lang.String java.lang.String.join(java.lang.CharSequence,java.lang.Iterable)
  public java.lang.String java.lang.String.toLowerCase(java.util.Locale)
  public java.lang.String java.lang.String.toLowerCase()
  public java.lang.String java.lang.String.toUpperCase()
  public java.lang.String java.lang.String.toUpperCase(java.util.Locale)
  public java.lang.String java.lang.String.trim()
  public char[] java.lang.String.toCharArray()
  public static java.lang.String java.lang.String.format(java.util.Locale,java.lang.String,java.lang.Object[])
  public static java.lang.String java.lang.String.format(java.lang.String,java.lang.Object[])
  public static java.lang.String java.lang.String.copyValueOf(char[],int,int)
  public static java.lang.String java.lang.String.copyValueOf(char[])
  public native java.lang.String java.lang.String.intern()

	at randoop.reflection.SignatureParser.parse(SignatureParser.java:164)
	at randoop.reflection.OperationModel.signatureToOperation(OperationModel.java:666)
	... 1 more
Caused by: java.lang.NoSuchMethodException: java.lang.String.indexOf([C, int, int, java.lang.String, int)
	at java.lang.Class.getMethod(Class.java:1786)
	at randoop.reflection.SignatureParser.parse(SignatureParser.java:153)
	... 2 more

java.lang.String.lastIndexOf(char[], int, int, char[], int, int, int)
randoop.main.RandoopUsageError: Could not parse signature java.lang.String.lastIndexOf(char[], int, int, char[], int, int, int)
	at randoop.reflection.OperationModel.signatureToOperation(OperationModel.java:668)
	at randoop.resource.MethodListGen.main(MethodListGen.java:105)
Caused by: randoop.reflection.SignatureParseException: Class class java.lang.String found, but method lastIndexOf([class [C, int, int, class [C, int, int, int]) not found for signature java.lang.String.lastIndexOf(char[], int, int, char[], int, int, int)
Here are the declared methods:%n  public boolean java.lang.String.equals(java.lang.Object)
  public java.lang.String java.lang.String.toString()
  public int java.lang.String.hashCode()
  public int java.lang.String.compareTo(java.lang.Object)
  public int java.lang.String.compareTo(java.lang.String)
  public int java.lang.String.indexOf(java.lang.String,int)
  static int java.lang.String.indexOf(char[],int,int,java.lang.String,int)
  static int java.lang.String.indexOf(char[],int,int,char[],int,int,int)
  public int java.lang.String.indexOf(int)
  public int java.lang.String.indexOf(java.lang.String)
  public int java.lang.String.indexOf(int,int)
  public static java.lang.String java.lang.String.valueOf(char)
  public static java.lang.String java.lang.String.valueOf(java.lang.Object)
  public static java.lang.String java.lang.String.valueOf(boolean)
  public static java.lang.String java.lang.String.valueOf(char[],int,int)
  public static java.lang.String java.lang.String.valueOf(char[])
  public static java.lang.String java.lang.String.valueOf(double)
  public static java.lang.String java.lang.String.valueOf(float)
  public static java.lang.String java.lang.String.valueOf(long)
  public static java.lang.String java.lang.String.valueOf(int)
  private static void java.lang.String.checkBounds(byte[],int,int)
  public int java.lang.String.length()
  public boolean java.lang.String.isEmpty()
  public char java.lang.String.charAt(int)
  public int java.lang.String.codePointAt(int)
  public int java.lang.String.codePointBefore(int)
  public int java.lang.String.codePointCount(int,int)
  public int java.lang.String.offsetByCodePoints(int,int)
  public void java.lang.String.getChars(int,int,char[],int)
  void java.lang.String.getChars(char[],int)
  public byte[] java.lang.String.getBytes()
  public byte[] java.lang.String.getBytes(java.lang.String) throws java.io.UnsupportedEncodingException
  public void java.lang.String.getBytes(int,int,byte[],int)
  public byte[] java.lang.String.getBytes(java.nio.charset.Charset)
  public boolean java.lang.String.contentEquals(java.lang.StringBuffer)
  public boolean java.lang.String.contentEquals(java.lang.CharSequence)
  private boolean java.lang.String.nonSyncContentEquals(java.lang.AbstractStringBuilder)
  public boolean java.lang.String.equalsIgnoreCase(java.lang.String)
  public int java.lang.String.compareToIgnoreCase(java.lang.String)
  public boolean java.lang.String.regionMatches(int,java.lang.String,int,int)
  public boolean java.lang.String.regionMatches(boolean,int,java.lang.String,int,int)
  public boolean java.lang.String.startsWith(java.lang.String)
  public boolean java.lang.String.startsWith(java.lang.String,int)
  public boolean java.lang.String.endsWith(java.lang.String)
  private int java.lang.String.indexOfSupplementary(int,int)
  public int java.lang.String.lastIndexOf(int,int)
  static int java.lang.String.lastIndexOf(char[],int,int,char[],int,int,int)
  static int java.lang.String.lastIndexOf(char[],int,int,java.lang.String,int)
  public int java.lang.String.lastIndexOf(java.lang.String,int)
  public int java.lang.String.lastIndexOf(int)
  public int java.lang.String.lastIndexOf(java.lang.String)
  private int java.lang.String.lastIndexOfSupplementary(int,int)
  public java.lang.String java.lang.String.substring(int)
  public java.lang.String java.lang.String.substring(int,int)
  public java.lang.CharSequence java.lang.String.subSequence(int,int)
  public java.lang.String java.lang.String.concat(java.lang.String)
  public java.lang.String java.lang.String.replace(char,char)
  public java.lang.String java.lang.String.replace(java.lang.CharSequence,java.lang.CharSequence)
  public boolean java.lang.String.matches(java.lang.String)
  public boolean java.lang.String.contains(java.lang.CharSequence)
  public java.lang.String java.lang.String.replaceFirst(java.lang.String,java.lang.String)
  public java.lang.String java.lang.String.replaceAll(java.lang.String,java.lang.String)
  public java.lang.String[] java.lang.String.split(java.lang.String,int)
  public java.lang.String[] java.lang.String.split(java.lang.String)
  public static java.lang.String java.lang.String.join(java.lang.CharSequence,java.lang.CharSequence[])
  public static java.lang.String java.lang.String.join(java.lang.CharSequence,java.lang.Iterable)
  public java.lang.String java.lang.String.toLowerCase(java.util.Locale)
  public java.lang.String java.lang.String.toLowerCase()
  public java.lang.String java.lang.String.toUpperCase()
  public java.lang.String java.lang.String.toUpperCase(java.util.Locale)
  public java.lang.String java.lang.String.trim()
  public char[] java.lang.String.toCharArray()
  public static java.lang.String java.lang.String.format(java.util.Locale,java.lang.String,java.lang.Object[])
  public static java.lang.String java.lang.String.format(java.lang.String,java.lang.Object[])
  public static java.lang.String java.lang.String.copyValueOf(char[],int,int)
  public static java.lang.String java.lang.String.copyValueOf(char[])
  public native java.lang.String java.lang.String.intern()

	at randoop.reflection.SignatureParser.parse(SignatureParser.java:164)
	at randoop.reflection.OperationModel.signatureToOperation(OperationModel.java:666)
	... 1 more
Caused by: java.lang.NoSuchMethodException: java.lang.String.lastIndexOf([C, int, int, [C, int, int, int)
	at java.lang.Class.getMethod(Class.java:1786)
	at randoop.reflection.SignatureParser.parse(SignatureParser.java:153)
	... 2 more

java.lang.String.lastIndexOf(char[], int, int, java.lang.String, int)
randoop.main.RandoopUsageError: Could not parse signature java.lang.String.lastIndexOf(char[], int, int, java.lang.String, int)
	at randoop.reflection.OperationModel.signatureToOperation(OperationModel.java:668)
	at randoop.resource.MethodListGen.main(MethodListGen.java:105)
Caused by: randoop.reflection.SignatureParseException: Class class java.lang.String found, but method lastIndexOf([class [C, int, int, class java.lang.String, int]) not found for signature java.lang.String.lastIndexOf(char[], int, int, java.lang.String, int)
Here are the declared methods:%n  public boolean java.lang.String.equals(java.lang.Object)
  public java.lang.String java.lang.String.toString()
  public int java.lang.String.hashCode()
  public int java.lang.String.compareTo(java.lang.Object)
  public int java.lang.String.compareTo(java.lang.String)
  public int java.lang.String.indexOf(java.lang.String,int)
  static int java.lang.String.indexOf(char[],int,int,java.lang.String,int)
  static int java.lang.String.indexOf(char[],int,int,char[],int,int,int)
  public int java.lang.String.indexOf(int)
  public int java.lang.String.indexOf(java.lang.String)
  public int java.lang.String.indexOf(int,int)
  public static java.lang.String java.lang.String.valueOf(char)
  public static java.lang.String java.lang.String.valueOf(java.lang.Object)
  public static java.lang.String java.lang.String.valueOf(boolean)
  public static java.lang.String java.lang.String.valueOf(char[],int,int)
  public static java.lang.String java.lang.String.valueOf(char[])
  public static java.lang.String java.lang.String.valueOf(double)
  public static java.lang.String java.lang.String.valueOf(float)
  public static java.lang.String java.lang.String.valueOf(long)
  public static java.lang.String java.lang.String.valueOf(int)
  private static void java.lang.String.checkBounds(byte[],int,int)
  public int java.lang.String.length()
  public boolean java.lang.String.isEmpty()
  public char java.lang.String.charAt(int)
  public int java.lang.String.codePointAt(int)
  public int java.lang.String.codePointBefore(int)
  public int java.lang.String.codePointCount(int,int)
  public int java.lang.String.offsetByCodePoints(int,int)
  public void java.lang.String.getChars(int,int,char[],int)
  void java.lang.String.getChars(char[],int)
  public byte[] java.lang.String.getBytes()
  public byte[] java.lang.String.getBytes(java.lang.String) throws java.io.UnsupportedEncodingException
  public void java.lang.String.getBytes(int,int,byte[],int)
  public byte[] java.lang.String.getBytes(java.nio.charset.Charset)
  public boolean java.lang.String.contentEquals(java.lang.StringBuffer)
  public boolean java.lang.String.contentEquals(java.lang.CharSequence)
  private boolean java.lang.String.nonSyncContentEquals(java.lang.AbstractStringBuilder)
  public boolean java.lang.String.equalsIgnoreCase(java.lang.String)
  public int java.lang.String.compareToIgnoreCase(java.lang.String)
  public boolean java.lang.String.regionMatches(int,java.lang.String,int,int)
  public boolean java.lang.String.regionMatches(boolean,int,java.lang.String,int,int)
  public boolean java.lang.String.startsWith(java.lang.String)
  public boolean java.lang.String.startsWith(java.lang.String,int)
  public boolean java.lang.String.endsWith(java.lang.String)
  private int java.lang.String.indexOfSupplementary(int,int)
  public int java.lang.String.lastIndexOf(int,int)
  static int java.lang.String.lastIndexOf(char[],int,int,char[],int,int,int)
  static int java.lang.String.lastIndexOf(char[],int,int,java.lang.String,int)
  public int java.lang.String.lastIndexOf(java.lang.String,int)
  public int java.lang.String.lastIndexOf(int)
  public int java.lang.String.lastIndexOf(java.lang.String)
  private int java.lang.String.lastIndexOfSupplementary(int,int)
  public java.lang.String java.lang.String.substring(int)
  public java.lang.String java.lang.String.substring(int,int)
  public java.lang.CharSequence java.lang.String.subSequence(int,int)
  public java.lang.String java.lang.String.concat(java.lang.String)
  public java.lang.String java.lang.String.replace(char,char)
  public java.lang.String java.lang.String.replace(java.lang.CharSequence,java.lang.CharSequence)
  public boolean java.lang.String.matches(java.lang.String)
  public boolean java.lang.String.contains(java.lang.CharSequence)
  public java.lang.String java.lang.String.replaceFirst(java.lang.String,java.lang.String)
  public java.lang.String java.lang.String.replaceAll(java.lang.String,java.lang.String)
  public java.lang.String[] java.lang.String.split(java.lang.String,int)
  public java.lang.String[] java.lang.String.split(java.lang.String)
  public static java.lang.String java.lang.String.join(java.lang.CharSequence,java.lang.CharSequence[])
  public static java.lang.String java.lang.String.join(java.lang.CharSequence,java.lang.Iterable)
  public java.lang.String java.lang.String.toLowerCase(java.util.Locale)
  public java.lang.String java.lang.String.toLowerCase()
  public java.lang.String java.lang.String.toUpperCase()
  public java.lang.String java.lang.String.toUpperCase(java.util.Locale)
  public java.lang.String java.lang.String.trim()
  public char[] java.lang.String.toCharArray()
  public static java.lang.String java.lang.String.format(java.util.Locale,java.lang.String,java.lang.Object[])
  public static java.lang.String java.lang.String.format(java.lang.String,java.lang.Object[])
  public static java.lang.String java.lang.String.copyValueOf(char[],int,int)
  public static java.lang.String java.lang.String.copyValueOf(char[])
  public native java.lang.String java.lang.String.intern()

	at randoop.reflection.SignatureParser.parse(SignatureParser.java:164)
	at randoop.reflection.OperationModel.signatureToOperation(OperationModel.java:666)
	... 1 more
Caused by: java.lang.NoSuchMethodException: java.lang.String.lastIndexOf([C, int, int, java.lang.String, int)
	at java.lang.Class.getMethod(Class.java:1786)
	at randoop.reflection.SignatureParser.parse(SignatureParser.java:153)
	... 2 more

java.lang.String.lastIndexOfSupplementary(int, int)
randoop.main.RandoopUsageError: Could not parse signature java.lang.String.lastIndexOfSupplementary(int, int)
	at randoop.reflection.OperationModel.signatureToOperation(OperationModel.java:668)
	at randoop.resource.MethodListGen.main(MethodListGen.java:105)
Caused by: randoop.reflection.SignatureParseException: Class class java.lang.String found, but method lastIndexOfSupplementary([int, int]) not found for signature java.lang.String.lastIndexOfSupplementary(int, int)
Here are the declared methods:%n  public boolean java.lang.String.equals(java.lang.Object)
  public java.lang.String java.lang.String.toString()
  public int java.lang.String.hashCode()
  public int java.lang.String.compareTo(java.lang.Object)
  public int java.lang.String.compareTo(java.lang.String)
  public int java.lang.String.indexOf(java.lang.String,int)
  static int java.lang.String.indexOf(char[],int,int,java.lang.String,int)
  static int java.lang.String.indexOf(char[],int,int,char[],int,int,int)
  public int java.lang.String.indexOf(int)
  public int java.lang.String.indexOf(java.lang.String)
  public int java.lang.String.indexOf(int,int)
  public static java.lang.String java.lang.String.valueOf(char)
  public static java.lang.String java.lang.String.valueOf(java.lang.Object)
  public static java.lang.String java.lang.String.valueOf(boolean)
  public static java.lang.String java.lang.String.valueOf(char[],int,int)
  public static java.lang.String java.lang.String.valueOf(char[])
  public static java.lang.String java.lang.String.valueOf(double)
  public static java.lang.String java.lang.String.valueOf(float)
  public static java.lang.String java.lang.String.valueOf(long)
  public static java.lang.String java.lang.String.valueOf(int)
  private static void java.lang.String.checkBounds(byte[],int,int)
  public int java.lang.String.length()
  public boolean java.lang.String.isEmpty()
  public char java.lang.String.charAt(int)
  public int java.lang.String.codePointAt(int)
  public int java.lang.String.codePointBefore(int)
  public int java.lang.String.codePointCount(int,int)
  public int java.lang.String.offsetByCodePoints(int,int)
  public void java.lang.String.getChars(int,int,char[],int)
  void java.lang.String.getChars(char[],int)
  public byte[] java.lang.String.getBytes()
  public byte[] java.lang.String.getBytes(java.lang.String) throws java.io.UnsupportedEncodingException
  public void java.lang.String.getBytes(int,int,byte[],int)
  public byte[] java.lang.String.getBytes(java.nio.charset.Charset)
  public boolean java.lang.String.contentEquals(java.lang.StringBuffer)
  public boolean java.lang.String.contentEquals(java.lang.CharSequence)
  private boolean java.lang.String.nonSyncContentEquals(java.lang.AbstractStringBuilder)
  public boolean java.lang.String.equalsIgnoreCase(java.lang.String)
  public int java.lang.String.compareToIgnoreCase(java.lang.String)
  public boolean java.lang.String.regionMatches(int,java.lang.String,int,int)
  public boolean java.lang.String.regionMatches(boolean,int,java.lang.String,int,int)
  public boolean java.lang.String.startsWith(java.lang.String)
  public boolean java.lang.String.startsWith(java.lang.String,int)
  public boolean java.lang.String.endsWith(java.lang.String)
  private int java.lang.String.indexOfSupplementary(int,int)
  public int java.lang.String.lastIndexOf(int,int)
  static int java.lang.String.lastIndexOf(char[],int,int,char[],int,int,int)
  static int java.lang.String.lastIndexOf(char[],int,int,java.lang.String,int)
  public int java.lang.String.lastIndexOf(java.lang.String,int)
  public int java.lang.String.lastIndexOf(int)
  public int java.lang.String.lastIndexOf(java.lang.String)
  private int java.lang.String.lastIndexOfSupplementary(int,int)
  public java.lang.String java.lang.String.substring(int)
  public java.lang.String java.lang.String.substring(int,int)
  public java.lang.CharSequence java.lang.String.subSequence(int,int)
  public java.lang.String java.lang.String.concat(java.lang.String)
  public java.lang.String java.lang.String.replace(char,char)
  public java.lang.String java.lang.String.replace(java.lang.CharSequence,java.lang.CharSequence)
  public boolean java.lang.String.matches(java.lang.String)
  public boolean java.lang.String.contains(java.lang.CharSequence)
  public java.lang.String java.lang.String.replaceFirst(java.lang.String,java.lang.String)
  public java.lang.String java.lang.String.replaceAll(java.lang.String,java.lang.String)
  public java.lang.String[] java.lang.String.split(java.lang.String,int)
  public java.lang.String[] java.lang.String.split(java.lang.String)
  public static java.lang.String java.lang.String.join(java.lang.CharSequence,java.lang.CharSequence[])
  public static java.lang.String java.lang.String.join(java.lang.CharSequence,java.lang.Iterable)
  public java.lang.String java.lang.String.toLowerCase(java.util.Locale)
  public java.lang.String java.lang.String.toLowerCase()
  public java.lang.String java.lang.String.toUpperCase()
  public java.lang.String java.lang.String.toUpperCase(java.util.Locale)
  public java.lang.String java.lang.String.trim()
  public char[] java.lang.String.toCharArray()
  public static java.lang.String java.lang.String.format(java.util.Locale,java.lang.String,java.lang.Object[])
  public static java.lang.String java.lang.String.format(java.lang.String,java.lang.Object[])
  public static java.lang.String java.lang.String.copyValueOf(char[],int,int)
  public static java.lang.String java.lang.String.copyValueOf(char[])
  public native java.lang.String java.lang.String.intern()

	at randoop.reflection.SignatureParser.parse(SignatureParser.java:164)
	at randoop.reflection.OperationModel.signatureToOperation(OperationModel.java:666)
	... 1 more
Caused by: java.lang.NoSuchMethodException: java.lang.String.lastIndexOfSupplementary(int, int)
	at java.lang.Class.getMethod(Class.java:1786)
	at randoop.reflection.SignatureParser.parse(SignatureParser.java:153)
	... 2 more

java.util.AbstractMap.clone()
randoop.main.RandoopUsageError: Could not parse signature java.util.AbstractMap.clone()
	at randoop.reflection.OperationModel.signatureToOperation(OperationModel.java:668)
	at randoop.resource.MethodListGen.main(MethodListGen.java:105)
Caused by: randoop.reflection.SignatureParseException: Class class java.util.AbstractMap found, but method clone([]) not found for signature java.util.AbstractMap.clone()
Here are the declared methods:%n  public java.lang.Object java.util.AbstractMap.remove(java.lang.Object)
  public java.lang.Object java.util.AbstractMap.get(java.lang.Object)
  public java.lang.Object java.util.AbstractMap.put(java.lang.Object,java.lang.Object)
  public boolean java.util.AbstractMap.equals(java.lang.Object)
  public java.lang.String java.util.AbstractMap.toString()
  public java.util.Collection java.util.AbstractMap.values()
  public int java.util.AbstractMap.hashCode()
  protected java.lang.Object java.util.AbstractMap.clone() throws java.lang.CloneNotSupportedException
  public void java.util.AbstractMap.clear()
  public boolean java.util.AbstractMap.isEmpty()
  public int java.util.AbstractMap.size()
  public abstract java.util.Set java.util.AbstractMap.entrySet()
  public void java.util.AbstractMap.putAll(java.util.Map)
  static boolean java.util.AbstractMap.access$000(java.lang.Object,java.lang.Object)
  public java.util.Set java.util.AbstractMap.keySet()
  public boolean java.util.AbstractMap.containsValue(java.lang.Object)
  public boolean java.util.AbstractMap.containsKey(java.lang.Object)
  private static boolean java.util.AbstractMap.eq(java.lang.Object,java.lang.Object)

	at randoop.reflection.SignatureParser.parse(SignatureParser.java:164)
	at randoop.reflection.OperationModel.signatureToOperation(OperationModel.java:666)
	... 1 more
Caused by: java.lang.NoSuchMethodException: java.util.AbstractMap.clone()
	at java.lang.Class.getMethod(Class.java:1786)
	at randoop.reflection.SignatureParser.parse(SignatureParser.java:153)
	... 2 more

java.util.Hashtable$Entry.clone()
randoop.main.RandoopUsageError: Could not parse signature java.util.Hashtable$Entry.clone()
	at randoop.reflection.OperationModel.signatureToOperation(OperationModel.java:668)
	at randoop.resource.MethodListGen.main(MethodListGen.java:105)
Caused by: randoop.reflection.SignatureParseException: Class class java.util.Hashtable$Entry found, but method clone([]) not found for signature java.util.Hashtable$Entry.clone()
Here are the declared methods:%n  public boolean java.util.Hashtable$Entry.equals(java.lang.Object)
  public java.lang.String java.util.Hashtable$Entry.toString()
  public int java.util.Hashtable$Entry.hashCode()
  protected java.lang.Object java.util.Hashtable$Entry.clone()
  public java.lang.Object java.util.Hashtable$Entry.getValue()
  public java.lang.Object java.util.Hashtable$Entry.getKey()
  public java.lang.Object java.util.Hashtable$Entry.setValue(java.lang.Object)

	at randoop.reflection.SignatureParser.parse(SignatureParser.java:164)
	at randoop.reflection.OperationModel.signatureToOperation(OperationModel.java:666)
	... 1 more
Caused by: java.lang.NoSuchMethodException: java.util.Hashtable$Entry.clone()
	at java.lang.Class.getMethod(Class.java:1786)
	at randoop.reflection.SignatureParser.parse(SignatureParser.java:153)
	... 2 more

java.util.logging.Logger.doLog(java.util.logging.LogRecord)
randoop.main.RandoopUsageError: Could not parse signature java.util.logging.Logger.doLog(java.util.logging.LogRecord)
	at randoop.reflection.OperationModel.signatureToOperation(OperationModel.java:668)
	at randoop.resource.MethodListGen.main(MethodListGen.java:105)
Caused by: randoop.reflection.SignatureParseException: Class class java.util.logging.Logger found, but method doLog([class java.util.logging.LogRecord]) not found for signature java.util.logging.Logger.doLog(java.util.logging.LogRecord)
Here are the declared methods:%n  public void java.util.logging.Logger.finer(java.lang.String)
  public void java.util.logging.Logger.finer(java.util.function.Supplier)
  public java.lang.String java.util.logging.Logger.getResourceBundleName()
  public static final java.util.logging.Logger java.util.logging.Logger.getGlobal()
  private void java.util.logging.Logger.setCallersClassLoaderRef(java.lang.Class)
  private java.lang.ClassLoader java.util.logging.Logger.getCallersClassLoader()
  void java.util.logging.Logger.setLogManager(java.util.logging.LogManager)
  private static java.util.logging.Logger java.util.logging.Logger.demandLogger(java.lang.String,java.lang.String,java.lang.Class)
  static java.util.logging.Logger java.util.logging.Logger.getPlatformLogger(java.lang.String)
  public static java.util.logging.Logger java.util.logging.Logger.getAnonymousLogger()
  public static java.util.logging.Logger java.util.logging.Logger.getAnonymousLogger(java.lang.String)
  public java.util.ResourceBundle java.util.logging.Logger.getResourceBundle()
  public void java.util.logging.Logger.setFilter(java.util.logging.Filter) throws java.lang.SecurityException
  public java.util.logging.Filter java.util.logging.Logger.getFilter()
  private void java.util.logging.Logger.doLog(java.util.logging.LogRecord)
  private void java.util.logging.Logger.doLog(java.util.logging.LogRecord,java.lang.String)
  private void java.util.logging.Logger.doLog(java.util.logging.LogRecord,java.util.ResourceBundle)
  public void java.util.logging.Logger.logp(java.util.logging.Level,java.lang.String,java.lang.String,java.lang.String)
  public void java.util.logging.Logger.logp(java.util.logging.Level,java.lang.String,java.lang.String,java.util.function.Supplier)
  public void java.util.logging.Logger.logp(java.util.logging.Level,java.lang.String,java.lang.String,java.lang.Throwable,java.util.function.Supplier)
  public void java.util.logging.Logger.logp(java.util.logging.Level,java.lang.String,java.lang.String,java.lang.String,java.lang.Throwable)
  public void java.util.logging.Logger.logp(java.util.logging.Level,java.lang.String,java.lang.String,java.lang.String,java.lang.Object[])
  public void java.util.logging.Logger.logp(java.util.logging.Level,java.lang.String,java.lang.String,java.lang.String,java.lang.Object)
  public void java.util.logging.Logger.logrb(java.util.logging.Level,java.lang.String,java.lang.String,java.util.ResourceBundle,java.lang.String,java.lang.Throwable)
  public void java.util.logging.Logger.logrb(java.util.logging.Level,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.Throwable)
  public void java.util.logging.Logger.logrb(java.util.logging.Level,java.lang.String,java.lang.String,java.util.ResourceBundle,java.lang.String,java.lang.Object[])
  public void java.util.logging.Logger.logrb(java.util.logging.Level,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.Object[])
  public void java.util.logging.Logger.logrb(java.util.logging.Level,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.Object)
  public void java.util.logging.Logger.logrb(java.util.logging.Level,java.lang.String,java.lang.String,java.lang.String,java.lang.String)
  public void java.util.logging.Logger.entering(java.lang.String,java.lang.String,java.lang.Object)
  public void java.util.logging.Logger.entering(java.lang.String,java.lang.String)
  public void java.util.logging.Logger.entering(java.lang.String,java.lang.String,java.lang.Object[])
  public void java.util.logging.Logger.exiting(java.lang.String,java.lang.String,java.lang.Object)
  public void java.util.logging.Logger.exiting(java.lang.String,java.lang.String)
  public void java.util.logging.Logger.throwing(java.lang.String,java.lang.String,java.lang.Throwable)
  public void java.util.logging.Logger.severe(java.util.function.Supplier)
  public void java.util.logging.Logger.severe(java.lang.String)
  public void java.util.logging.Logger.config(java.lang.String)
  public void java.util.logging.Logger.config(java.util.function.Supplier)
  public void java.util.logging.Logger.fine(java.lang.String)
  public void java.util.logging.Logger.fine(java.util.function.Supplier)
  public void java.util.logging.Logger.finest(java.util.function.Supplier)
  public void java.util.logging.Logger.finest(java.lang.String)
  public void java.util.logging.Logger.setLevel(java.util.logging.Level) throws java.lang.SecurityException
  final boolean java.util.logging.Logger.isLevelInitialized()
  public java.util.logging.Level java.util.logging.Logger.getLevel()
  public void java.util.logging.Logger.addHandler(java.util.logging.Handler) throws java.lang.SecurityException
  public void java.util.logging.Logger.removeHandler(java.util.logging.Handler) throws java.lang.SecurityException
  public java.util.logging.Handler[] java.util.logging.Logger.getHandlers()
  java.util.logging.Handler[] java.util.logging.Logger.accessCheckedHandlers()
  public void java.util.logging.Logger.setUseParentHandlers(boolean)
  public boolean java.util.logging.Logger.getUseParentHandlers()
  private static java.util.ResourceBundle java.util.logging.Logger.findSystemResourceBundle(java.util.Locale)
  private synchronized java.util.ResourceBundle java.util.logging.Logger.findResourceBundle(java.lang.String,boolean)
  private synchronized void java.util.logging.Logger.setupResourceInfo(java.lang.String,java.lang.Class)
  public void java.util.logging.Logger.setResourceBundle(java.util.ResourceBundle)
  private void java.util.logging.Logger.doSetParent(java.util.logging.Logger)
  final void java.util.logging.Logger.removeChildLogger(java.util.logging.LogManager$LoggerWeakRef)
  private void java.util.logging.Logger.updateEffectiveLevel()
  private java.util.logging.Logger$LoggerBundle java.util.logging.Logger.getEffectiveLoggerBundle()
  public static java.util.logging.Logger java.util.logging.Logger.getLogger(java.lang.String)
  public static java.util.logging.Logger java.util.logging.Logger.getLogger(java.lang.String,java.lang.String)
  public void java.util.logging.Logger.warning(java.lang.String)
  public void java.util.logging.Logger.warning(java.util.function.Supplier)
  public boolean java.util.logging.Logger.isLoggable(java.util.logging.Level)
  public void java.util.logging.Logger.info(java.lang.String)
  public void java.util.logging.Logger.info(java.util.function.Supplier)
  public void java.util.logging.Logger.log(java.util.logging.Level,java.lang.Throwable,java.util.function.Supplier)
  public void java.util.logging.Logger.log(java.util.logging.Level,java.lang.String,java.lang.Object)
  public void java.util.logging.Logger.log(java.util.logging.Level,java.lang.String,java.lang.Object[])
  public void java.util.logging.Logger.log(java.util.logging.Level,java.lang.String,java.lang.Throwable)
  public void java.util.logging.Logger.log(java.util.logging.LogRecord)
  public void java.util.logging.Logger.log(java.util.logging.Level,java.util.function.Supplier)
  public void java.util.logging.Logger.log(java.util.logging.Level,java.lang.String)
  public java.lang.String java.util.logging.Logger.getName()
  static java.util.logging.Logger$LoggerBundle java.util.logging.Logger.access$100()
  private void java.util.logging.Logger.checkPermission() throws java.lang.SecurityException
  public java.util.logging.Logger java.util.logging.Logger.getParent()
  static java.util.logging.Logger$LoggerBundle java.util.logging.Logger.access$000()
  public void java.util.logging.Logger.setParent(java.util.logging.Logger)

	at randoop.reflection.SignatureParser.parse(SignatureParser.java:164)
	at randoop.reflection.OperationModel.signatureToOperation(OperationModel.java:666)
	... 1 more
Caused by: java.lang.NoSuchMethodException: java.util.logging.Logger.doLog(java.util.logging.LogRecord)
	at java.lang.Class.getMethod(Class.java:1786)
	at randoop.reflection.SignatureParser.parse(SignatureParser.java:153)
	... 2 more

java.util.logging.Logger.doLog(java.util.logging.LogRecord, java.lang.String)
randoop.main.RandoopUsageError: Could not parse signature java.util.logging.Logger.doLog(java.util.logging.LogRecord, java.lang.String)
	at randoop.reflection.OperationModel.signatureToOperation(OperationModel.java:668)
	at randoop.resource.MethodListGen.main(MethodListGen.java:105)
Caused by: randoop.reflection.SignatureParseException: Class class java.util.logging.Logger found, but method doLog([class java.util.logging.LogRecord, class java.lang.String]) not found for signature java.util.logging.Logger.doLog(java.util.logging.LogRecord, java.lang.String)
Here are the declared methods:%n  public void java.util.logging.Logger.finer(java.lang.String)
  public void java.util.logging.Logger.finer(java.util.function.Supplier)
  public java.lang.String java.util.logging.Logger.getResourceBundleName()
  public static final java.util.logging.Logger java.util.logging.Logger.getGlobal()
  private void java.util.logging.Logger.setCallersClassLoaderRef(java.lang.Class)
  private java.lang.ClassLoader java.util.logging.Logger.getCallersClassLoader()
  void java.util.logging.Logger.setLogManager(java.util.logging.LogManager)
  private static java.util.logging.Logger java.util.logging.Logger.demandLogger(java.lang.String,java.lang.String,java.lang.Class)
  static java.util.logging.Logger java.util.logging.Logger.getPlatformLogger(java.lang.String)
  public static java.util.logging.Logger java.util.logging.Logger.getAnonymousLogger()
  public static java.util.logging.Logger java.util.logging.Logger.getAnonymousLogger(java.lang.String)
  public java.util.ResourceBundle java.util.logging.Logger.getResourceBundle()
  public void java.util.logging.Logger.setFilter(java.util.logging.Filter) throws java.lang.SecurityException
  public java.util.logging.Filter java.util.logging.Logger.getFilter()
  private void java.util.logging.Logger.doLog(java.util.logging.LogRecord)
  private void java.util.logging.Logger.doLog(java.util.logging.LogRecord,java.lang.String)
  private void java.util.logging.Logger.doLog(java.util.logging.LogRecord,java.util.ResourceBundle)
  public void java.util.logging.Logger.logp(java.util.logging.Level,java.lang.String,java.lang.String,java.lang.String)
  public void java.util.logging.Logger.logp(java.util.logging.Level,java.lang.String,java.lang.String,java.util.function.Supplier)
  public void java.util.logging.Logger.logp(java.util.logging.Level,java.lang.String,java.lang.String,java.lang.Throwable,java.util.function.Supplier)
  public void java.util.logging.Logger.logp(java.util.logging.Level,java.lang.String,java.lang.String,java.lang.String,java.lang.Throwable)
  public void java.util.logging.Logger.logp(java.util.logging.Level,java.lang.String,java.lang.String,java.lang.String,java.lang.Object[])
  public void java.util.logging.Logger.logp(java.util.logging.Level,java.lang.String,java.lang.String,java.lang.String,java.lang.Object)
  public void java.util.logging.Logger.logrb(java.util.logging.Level,java.lang.String,java.lang.String,java.util.ResourceBundle,java.lang.String,java.lang.Throwable)
  public void java.util.logging.Logger.logrb(java.util.logging.Level,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.Throwable)
  public void java.util.logging.Logger.logrb(java.util.logging.Level,java.lang.String,java.lang.String,java.util.ResourceBundle,java.lang.String,java.lang.Object[])
  public void java.util.logging.Logger.logrb(java.util.logging.Level,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.Object[])
  public void java.util.logging.Logger.logrb(java.util.logging.Level,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.Object)
  public void java.util.logging.Logger.logrb(java.util.logging.Level,java.lang.String,java.lang.String,java.lang.String,java.lang.String)
  public void java.util.logging.Logger.entering(java.lang.String,java.lang.String,java.lang.Object)
  public void java.util.logging.Logger.entering(java.lang.String,java.lang.String)
  public void java.util.logging.Logger.entering(java.lang.String,java.lang.String,java.lang.Object[])
  public void java.util.logging.Logger.exiting(java.lang.String,java.lang.String,java.lang.Object)
  public void java.util.logging.Logger.exiting(java.lang.String,java.lang.String)
  public void java.util.logging.Logger.throwing(java.lang.String,java.lang.String,java.lang.Throwable)
  public void java.util.logging.Logger.severe(java.util.function.Supplier)
  public void java.util.logging.Logger.severe(java.lang.String)
  public void java.util.logging.Logger.config(java.lang.String)
  public void java.util.logging.Logger.config(java.util.function.Supplier)
  public void java.util.logging.Logger.fine(java.lang.String)
  public void java.util.logging.Logger.fine(java.util.function.Supplier)
  public void java.util.logging.Logger.finest(java.util.function.Supplier)
  public void java.util.logging.Logger.finest(java.lang.String)
  public void java.util.logging.Logger.setLevel(java.util.logging.Level) throws java.lang.SecurityException
  final boolean java.util.logging.Logger.isLevelInitialized()
  public java.util.logging.Level java.util.logging.Logger.getLevel()
  public void java.util.logging.Logger.addHandler(java.util.logging.Handler) throws java.lang.SecurityException
  public void java.util.logging.Logger.removeHandler(java.util.logging.Handler) throws java.lang.SecurityException
  public java.util.logging.Handler[] java.util.logging.Logger.getHandlers()
  java.util.logging.Handler[] java.util.logging.Logger.accessCheckedHandlers()
  public void java.util.logging.Logger.setUseParentHandlers(boolean)
  public boolean java.util.logging.Logger.getUseParentHandlers()
  private static java.util.ResourceBundle java.util.logging.Logger.findSystemResourceBundle(java.util.Locale)
  private synchronized java.util.ResourceBundle java.util.logging.Logger.findResourceBundle(java.lang.String,boolean)
  private synchronized void java.util.logging.Logger.setupResourceInfo(java.lang.String,java.lang.Class)
  public void java.util.logging.Logger.setResourceBundle(java.util.ResourceBundle)
  private void java.util.logging.Logger.doSetParent(java.util.logging.Logger)
  final void java.util.logging.Logger.removeChildLogger(java.util.logging.LogManager$LoggerWeakRef)
  private void java.util.logging.Logger.updateEffectiveLevel()
  private java.util.logging.Logger$LoggerBundle java.util.logging.Logger.getEffectiveLoggerBundle()
  public static java.util.logging.Logger java.util.logging.Logger.getLogger(java.lang.String)
  public static java.util.logging.Logger java.util.logging.Logger.getLogger(java.lang.String,java.lang.String)
  public void java.util.logging.Logger.warning(java.lang.String)
  public void java.util.logging.Logger.warning(java.util.function.Supplier)
  public boolean java.util.logging.Logger.isLoggable(java.util.logging.Level)
  public void java.util.logging.Logger.info(java.lang.String)
  public void java.util.logging.Logger.info(java.util.function.Supplier)
  public void java.util.logging.Logger.log(java.util.logging.Level,java.lang.Throwable,java.util.function.Supplier)
  public void java.util.logging.Logger.log(java.util.logging.Level,java.lang.String,java.lang.Object)
  public void java.util.logging.Logger.log(java.util.logging.Level,java.lang.String,java.lang.Object[])
  public void java.util.logging.Logger.log(java.util.logging.Level,java.lang.String,java.lang.Throwable)
  public void java.util.logging.Logger.log(java.util.logging.LogRecord)
  public void java.util.logging.Logger.log(java.util.logging.Level,java.util.function.Supplier)
  public void java.util.logging.Logger.log(java.util.logging.Level,java.lang.String)
  public java.lang.String java.util.logging.Logger.getName()
  static java.util.logging.Logger$LoggerBundle java.util.logging.Logger.access$100()
  private void java.util.logging.Logger.checkPermission() throws java.lang.SecurityException
  public java.util.logging.Logger java.util.logging.Logger.getParent()
  static java.util.logging.Logger$LoggerBundle java.util.logging.Logger.access$000()
  public void java.util.logging.Logger.setParent(java.util.logging.Logger)

	at randoop.reflection.SignatureParser.parse(SignatureParser.java:164)
	at randoop.reflection.OperationModel.signatureToOperation(OperationModel.java:666)
	... 1 more
Caused by: java.lang.NoSuchMethodException: java.util.logging.Logger.doLog(java.util.logging.LogRecord, java.lang.String)
	at java.lang.Class.getMethod(Class.java:1786)
	at randoop.reflection.SignatureParser.parse(SignatureParser.java:153)
	... 2 more

